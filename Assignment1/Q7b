%matplotlib inline
import cv2 as cv
import numpy as np
from matplotlib import pyplot as plt

img = cv.imread('einstein.png', cv.IMREAD_GRAYSCALE)

# Averaging
kernel_v = np.array([(-1, -2, -1), (0, 0, 0), (1, 2, 1)], dtype='float')
kernel_h = np.array([(-1, 0, 1), (-2, 0, 2), (-1, 0, 1)], dtype='float')

def sobel_filter(image, kernel):
    height, width = image.shape
    output = np.zeros((height - 4, width - 4), dtype='float')

    for y in range(0, height - 4):
        for x in range(0, width - 4):
            output[y,x] = np.sum(image[y:(y + 3), x:(x + 3)] * kernel)

            if output[y, x] < 0:        #Maintain pixel intensity between 0 and 255
                output[y, x] = 0

            elif output[y, x] > 255:  
                output[y, x] = 255

    return output


filtered_x = sobel_filter(img, kernel_h)
filtered_y = sobel_filter(img, kernel_v)

fig, axes  = plt.subplots(1,3, sharex='all', sharey='all', figsize=(18,9))
axes[0].imshow(img, cmap='gray')
axes[0].set_title('Original')
axes[0].set_xticks([]), axes[0].set_yticks([])
axes[1].imshow(filtered_x, cmap='gray')
axes[1].set_title('Horizontal')
axes[1].set_xticks([]), axes[1].set_yticks([])
axes[2].imshow(filtered_y, cmap='gray')
axes[2].set_title('Vertical')
axes[2].set_xticks([]), axes[1].set_yticks([])
plt.show()
