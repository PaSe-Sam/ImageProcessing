import cv2 as cv
import numpy as np
from matplotlib import pyplot as plt

def hist_equ(img):
    histogram, bins = np.histogram(img.flatten(), bins=256, range=(0, 256))
    cdf = histogram.cumsum()
    cdf_normalized = (cdf - cdf.min())*255/(cdf.max() - cdf.min())
    LUT = np.interp(img.flatten(), bins[:-1], cdf_normalized) 
    img_equ = LUT.reshape(img.shape).astype(np.uint8)
    return img_equ

img_orig = cv.imread('shells.tif', cv.IMREAD_GRAYSCALE)

hist, bins = np.histogram(img_orig.ravel(), 256, [0, 256])
cdf = hist.cumsum()
cdf_normalized = cdf * hist.max() / cdf.max()
plt.plot(cdf_normalized)
plt.hist(img.flatten(), 256, [0, 256])
plt.xlim([0, 256])
plt.legend(('CDF', 'Histogram'))
plt.title('Histogram of Original Image')
plt.show()

img_equ = hist_equ(img_orig)
hist, bins = np.histogram(equ.ravel(), 256, [0, 256])
cdf = hist.cumsum()
cdf_normalized = cdf * hist.max() / cdf.max()
plt.plot(cdf_normalized)
plt.hist(equ.flatten(), 256, [0, 256])
plt.xlim([0, 256])
plt.legend(('CDF', 'Histogram'))
plt.title('Histogram of Equalized Image')
plt.show()

cv.namedWindow("Image", cv.WINDOW_AUTOSIZE)
cv.imwrite('shells.jpg', img_orig)
cv.imshow("Original Image", img_orig)
cv.waitKey(0)
cv.imwrite('histequ.jpg', img_equ)
cv.imshow("Histogram Equalized Image", img_equ)
cv.waitKey(0)
cv.destroyAllWindows()
